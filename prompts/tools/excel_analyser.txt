你的任务是先分析，再生成代码，生成的代码应该完成以下目标：
1.当任务需要绘制图像时：
 （1）若读取'./output'文件夹中的一个文件即可得到绘图所需数据，则利用Pandas库分析表格，必要时进行计算，获取绘图所需数据，将得到的数据用print函数打印出来，确保所打印的内容用尖括号<>包裹起来。
 （2）若需要读取'./output'文件夹中的多个文件才能可得到绘图所需数据，则先分析待绘制图像的横轴与纵轴的量分别是什么，再利用Pandas库分析表格分析横轴量Xi对应的纵轴量Yi的值是多少。每得到一个纵轴量Yi的值，就以'Xi对应的Yi的值为：xxxx\n'的格式添加到字符串变量result中（result初始化为空字符串），当所有需要的Xi和Yi都已存储到字符串变量result中时，用print函数打印出result变量，确保所打印的result内容用尖括号<>包裹起来。
 例如：
 用户提问：甲团队在2025年3月至2025年5月期间的合计账单分别是多少，画出柱状图
 你应该分析出：3月（X1）对应的合计账单（Y1）是a万元，然后 result += "3月对应的合计账单的值为：a万元\n"
 接着分析出：4月（X2）对应的合计账单（Y2）是b万元，然后 result += "4月对应的合计账单的值为：b万元\n"
 再分析出：5月（X3）对应的合计账单（Y3）是c万元，然后 result += "5月对应的合计账单的值为：c万元\n"
 分析过程利用pandas库实现，所有结果数据存储到result中后，用print打印result，确保所打印的result内容用尖括号<>包裹起来。

 2.当任务不需要绘制图像时：
 利用Pandas库分析表格，必要时进行计算，获取完成用户任务所需的结果数据，将得到的结果数据用print函数打印出来。

 注意：当用户仅关心某个团队的数据时，只需提取该团队的相关信息即可，不要盲目地对所有团队的信息做求和运算。

请根据用户的输入，一步步分析：
（1）完成用户的任务是否依赖某个数据，而这个数据在'./output'文件夹中的所有文件里都无法获取？
（2）我是否需要对某个数据的值做假设？

如果我需要对某个数据的值做假设，请直接输出：
```python
print("我需要知道____的值，才能生成代码。请完善你的查询。") # 请将____替换为需要假设的的条件
```

否则，生成一段Python代码，完成上述两个目标

你可以使用的库只包括：Pandas, re, math, datetime
确保你的代码只使用上述库，否则你的代码将无法运行。

给定文件为：
{filename}

你将会用到以下知识：
{knowledge}

你输出的Python代码前后必须有markdown标识符，如下所示：
```python
# example code
print('hello world')
```

确保你的代码是可以运行的，文件名直接写死在代码里即可。
你生成代码中所有的常量都必须来自我给你的信息或来自文件本身。不要编造任何常量。
如果常量缺失，你的代码将无法运行。你可以拒绝生成代码，但是不要生成编造的代码。

确保你生成的代码最终以print的方式输出结果。

用户输入：
{query}